//one.java   [interface]
package exp5;

import java.rmi.*;

public interface one extends Remote {
    public int palin(String a) throws RemoteException;
}

==============================================================


// two.java     [class]


package exp5;

import java.rmi.*;
import java.rmi.server.*;

public class two extends UnicastRemoteObject implements one {
    public two() throws RemoteException {
        super();
    }

    public int palin(String a) throws RemoteException {
        System.out.println("Hello");
        StringBuffer str = new StringBuffer(a);
        String str1 = str.toString();
        System.out.println("Print : " + str1);
        StringBuffer str2 = new StringBuffer(a).reverse();
        System.out.println("Print : " + str2.toString());
        int b = str1.compareTo(str2.toString());
        System.out.println("Print : " + b);
        return (b == 0) ? 1 : 0;
    }
}


=================================================================

//rmiclient.java                  [class]

package exp5;

import java.io.*;
import java.rmi.*;
import java.net.*;
public class rmiclient
{
 public static void main(String args[]) throws Exception
 {
 try
 {String s1 = "rmi://localhost/palin";
 one onex = (one)Naming.lookup(s1);
 int m = onex.palin("madam");
 System.out.println("Print : " + m);
 if (m == 1)
 {
 System.out.println("The given string is a Palindrome");
 }
 else
 {
 System.out.println("The given string is not a Palindrome");
 }
 }
 catch (Exception e)
 {
 System.out.println("Exception" + e);
 }
 }
}

=======================================================================

//rmiserver.java                       [class]

package exp5;

import java.rmi.*;

public class rmiserver {
    public static void main(String args[]) {
        try {
            two twox = new two();
            Naming.rebind("palin", twox); // Changed bind â†’ rebind to avoid AlreadyBoundException
            System.out.println("Object registered");
        } catch (Exception e) {
            System.out.println("Exception: " + e);
        }
    }
}

================================PROCEDURE FOR CMD===================================

//javac *.java
// rmic two                 or  first do the cd ..  and then write rmic exp5.two
// start rmiregistry
// java exp5.rmiserver
//java exp5.rmiclient 

